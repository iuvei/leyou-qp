{"version":3,"sources":["..\\..\\..\\..\\..\\assets\\scripts\\components/assets\\scripts\\components\\Setting.js"],"names":["cc","Class","extends","Component","properties","effectSlider","Slider","musicSlider","effectProgressBar","ProgressBar","musicProgressBar","onLoad","th","node","active","onEnable","bgm","sys","localStorage","getItem","audioManager","setBGMVolume","parseFloat","progress","sfx","setSFXVolume","log","onCloseClicked","playSFX","onEffectSlide","target","onMusicSlide"],"mappings":";;;;;;AAAAA,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACRC,sBAAcL,GAAGM,MADT;AAERC,qBAAaP,GAAGM,MAFR;AAGRE,2BAAmBR,GAAGS,WAHd;AAIRC,0BAAkBV,GAAGS;AAJb,KAHP;;AAULE,YAAQ,kBAAW;AACf,YAAIC,MAAM,IAAV,EAAgB;AACZ,mBAAO,IAAP;AACH;AACD,aAAKC,IAAL,CAAUC,MAAV,GAAmB,KAAnB;AACH,KAfI;;AAiBL;;AAEA;;AAEAC,cAAU,oBAAW;AACjB,YAAIC,MAAMhB,GAAGiB,GAAH,CAAOC,YAAP,CAAoBC,OAApB,CAA4B,WAA5B,CAAV;AACA,YAAIH,GAAJ,EAAS;AACLJ,eAAGQ,YAAH,CAAgBC,YAAhB,CAA6BC,WAAWN,GAAX,CAA7B;AACA,iBAAKT,WAAL,CAAiBgB,QAAjB,GAA4BD,WAAWN,GAAX,CAA5B;AACA,iBAAKN,gBAAL,CAAsBa,QAAtB,GAAiCD,WAAWN,GAAX,CAAjC;AACH;AACD,YAAIQ,MAAMxB,GAAGiB,GAAH,CAAOC,YAAP,CAAoBC,OAApB,CAA4B,WAA5B,CAAV;AACA,YAAIK,GAAJ,EAAS;AACLZ,eAAGQ,YAAH,CAAgBK,YAAhB,CAA6BH,WAAWE,GAAX,CAA7B;AACA,iBAAKnB,YAAL,CAAkBkB,QAAlB,GAA6BD,WAAWE,GAAX,CAA7B;AACA,iBAAKhB,iBAAL,CAAuBe,QAAvB,GAAkCD,WAAWE,GAAX,CAAlC;AACH;AACDxB,WAAG0B,GAAH,CAAO,MAAP,EAAeV,GAAf,EAAoB,MAApB,EAA4BQ,GAA5B;AACH,KAnCI;;AAqCLG,oBAAgB,0BAAW;AACvBf,WAAGQ,YAAH,CAAgBQ,OAAhB,CAAwB,WAAxB;AACA,aAAKf,IAAL,CAAUC,MAAV,GAAmB,KAAnB;AACH,KAxCI;;AA0CLe,mBAAe,uBAASC,MAAT,EAAiB;AAC5BlB,WAAGQ,YAAH,CAAgBK,YAAhB,CAA6BK,OAAOP,QAApC;AACA,aAAKf,iBAAL,CAAuBe,QAAvB,GAAkCO,OAAOP,QAAzC;AACH,KA7CI;;AA+CLQ,kBAAc,sBAASD,MAAT,EAAiB;AAC3BlB,WAAGQ,YAAH,CAAgBC,YAAhB,CAA6BS,OAAOP,QAApC;AACA,aAAKb,gBAAL,CAAsBa,QAAtB,GAAiCO,OAAOP,QAAxC;AACH;AAlDI,CAAT","file":"Setting.js","sourceRoot":"..\\..\\..\\..\\..\\assets\\scripts\\components","sourcesContent":["cc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        effectSlider: cc.Slider,\r\n        musicSlider: cc.Slider,\r\n        effectProgressBar: cc.ProgressBar,\r\n        musicProgressBar: cc.ProgressBar\r\n    },\r\n\r\n    onLoad: function() {\r\n        if (th == null) {\r\n            return null;\r\n        }\r\n        this.node.active = false;\r\n    },\r\n\r\n    // update: function (dt) {\r\n\r\n    // },\r\n\r\n    onEnable: function() {\r\n        var bgm = cc.sys.localStorage.getItem(\"bgmVolume\");\r\n        if (bgm) {\r\n            th.audioManager.setBGMVolume(parseFloat(bgm));\r\n            this.musicSlider.progress = parseFloat(bgm);\r\n            this.musicProgressBar.progress = parseFloat(bgm);\r\n        }\r\n        var sfx = cc.sys.localStorage.getItem(\"sfxVolume\");\r\n        if (sfx) {\r\n            th.audioManager.setSFXVolume(parseFloat(sfx));\r\n            this.effectSlider.progress = parseFloat(sfx);\r\n            this.effectProgressBar.progress = parseFloat(sfx);\r\n        }\r\n        cc.log(\"bgm:\", bgm, \"sfx:\", sfx);\r\n    },\r\n\r\n    onCloseClicked: function() {\r\n        th.audioManager.playSFX(\"click.mp3\");\r\n        this.node.active = false;\r\n    },\r\n\r\n    onEffectSlide: function(target) {\r\n        th.audioManager.setSFXVolume(target.progress);\r\n        this.effectProgressBar.progress = target.progress;\r\n    },\r\n\r\n    onMusicSlide: function(target) {\r\n        th.audioManager.setBGMVolume(target.progress);\r\n        this.musicProgressBar.progress = target.progress;\r\n    }\r\n});\r\n"]}