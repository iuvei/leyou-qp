{"version":3,"sources":["..\\..\\..\\..\\assets\\scripts/assets\\scripts\\WebSocketManager.js"],"names":["cc","Class","extends","Component","properties","dataEventHandler","dispatchEvent","event","data","emit","initHandlers","log","th","ws","msgprefn","result","result_message","wc","hide","alert","show","args","debug","addHandler","token","t","params","operation","timestamp","Date","parse","send","JSON","stringify","sign","Object","assign","myself","director","loadScene","room","account_id","session","room_number","sceneName","gametype","players","isPlayer","findIndex","player","guests","find","push","guest","getGuestById","getPlayerById","game_num","limit_time","rdata","forEach","oldPlayer","cards","multiples","connectApiServer","ip","port","namespace","close","addr","connect","code","connectGameNNServer","callback"],"mappings":"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","file":"WebSocketManager.js","sourceRoot":"..\\..\\..\\..\\assets\\scripts","sourcesContent":["cc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        dataEventHandler: null //websocket发过来的数据的节点\r\n    },\r\n\r\n    dispatchEvent(event, data) {\r\n        if (this.dataEventHandler) {\r\n            this.dataEventHandler.emit(event, data);\r\n        }\r\n    },\r\n    initHandlers: function() {\r\n        cc.log(\"==>WebSocketManager initHandlers\");\r\n        th.ws.msgprefn = function({ result, result_message }) {\r\n            if (result != 0) {\r\n                th.wc.hide();\r\n                th.alert.show(\r\n                    \"提示\",\r\n                    th.args.debug ? result_message : \"系统维护更新\"\r\n                );\r\n                return false;\r\n            }\r\n            return true;\r\n        };\r\n        //获取TOKEN\r\n        th.ws.addHandler(\"getToken\", ({ data }) => {\r\n            cc.log(\"<<<===[getToken] WebSocketManager:\", data);\r\n            this.dispatchEvent(\"getToken\", data);\r\n            th.wc.show(\"正在获生成签名...\");\r\n            th.token = data.t;\r\n            let params = {\r\n                operation: \"makeSign\",\r\n                data: {\r\n                    timestamp: Date.parse(new Date()) / 1000,\r\n                    token: data.t\r\n                }\r\n            };\r\n            cc.log(\"===>>>[makeSign] WebSocketManager:\", params);\r\n            th.ws.send(JSON.stringify(params));\r\n        });\r\n\r\n        //模拟生成签名(获取用户信息)\r\n        th.ws.addHandler(\"makeSign\", ({ data }) => {\r\n            cc.log(\"<<<===[makeSign] WebSocketManager:\", data);\r\n            this.dispatchEvent(\"makeSign\", data);\r\n            th.wc.show(\"正在用户信息...\");\r\n            th.sign = data.sign;\r\n            let params = {\r\n                operation: \"pullUserInfo\",\r\n                data: {\r\n                    timestamp: Date.parse(new Date()) / 1000,\r\n                    token: th.token,\r\n                    sign: data.sign\r\n                }\r\n            };\r\n            cc.log(\"===>>>[pullUserInfo] WebSocketManager:\", params);\r\n            th.ws.send(JSON.stringify(params));\r\n        });\r\n\r\n        //4. 获取用户信息\r\n        th.ws.addHandler(\"pullUserInfo\", ({ data }) => {\r\n            cc.log(\"<<<===[pullUserInfo] WebSocketManager:\", data);\r\n            this.dispatchEvent(\"pullUserInfo\", data);\r\n            th.wc.show(\"正在加载游戏...\");\r\n            Object.assign(th.myself, data);\r\n            cc.director.loadScene(\"Hall\", () => {\r\n                th.wc.hide();\r\n            });\r\n        });\r\n\r\n        //创建房间\r\n        th.ws.addHandler(\"CreateRoom\", ({ data }) => {\r\n            cc.log(\"<<<===[CreateRoom] WebSocketManager:\", data);\r\n            th.wc.show(\"正在加请求房间数据...\");\r\n            Object.assign(th.room, data);\r\n            this.dispatchEvent(\"CreateRoom\", data);\r\n            let params = {\r\n                operation: \"PrepareJoinRoom\",\r\n                account_id: th.myself.account_id, //用户id};\r\n                session: th.sign,\r\n                data: {\r\n                    room_number: th.room.room_number\r\n                }\r\n            };\r\n            cc.log(\"===>>>[PrepareJoinRoom] WebSocketManager:\", params);\r\n            th.ws.send(JSON.stringify(params));\r\n        });\r\n\r\n        //进入房间请求初始信息\r\n        th.ws.addHandler(\"PrepareJoinRoom\", ({ data }) => {\r\n            cc.log(\"<<<===[PrepareJoinRoom] WebSocketManager:\", data);\r\n            th.room = Object.assign(th.room, data);\r\n            this.dispatchEvent(\"PrepareJoinRoom\", data);\r\n            th.wc.hide();\r\n        });\r\n\r\n        //加入房间\r\n        th.ws.addHandler(\"JoinRoom\", ({ data }) => {\r\n            cc.log(\"<<<===[JoinRoom] WebSocketManager:\", data);\r\n            Object.assign(th.room, data);\r\n            let sceneName = th.gametype == \"nn\" ? \"GameNN\" : \"GameZJH\";\r\n            cc.director.loadScene(sceneName, () => {\r\n                th.wc.hide();\r\n            });\r\n            this.dispatchEvent(\"JoinRoom\", data);\r\n        });\r\n        //加入观战\r\n        th.ws.addHandler(\"GuestRoom\", ({ data }) => {\r\n            cc.log(\"<<<===[GuestRoom] WebSocketManager:\", data);\r\n            Object.assign(th.room, data);\r\n            let sceneName = th.gametype == \"nn\" ? \"GameNN\" : \"GameZJH\";\r\n            cc.director.loadScene(sceneName, () => {\r\n                th.wc.hide();\r\n            });\r\n            this.dispatchEvent(\"GuestRoom\", data);\r\n        });\r\n\r\n        //到游戏人员信息\r\n        th.ws.addHandler(\"AllGamerInfo\", ({ data }) => {\r\n            cc.log(\"<<<===[AllGamerInfo] WebSocketManager:\", data);\r\n            th.room.players = data;\r\n            th.myself.isPlayer =\r\n                data.findIndex(\r\n                    player => player.account_id == th.myself.account_id\r\n                ) > -1\r\n                    ? true\r\n                    : false;\r\n            this.dispatchEvent(\"AllGamerInfo\", data);\r\n        });\r\n        //观战人员信息\r\n        th.ws.addHandler(\"AllGuestInfo\", ({ data }) => {\r\n            cc.log(\"<<<===[AllGuestInfo] WebSocketManager:\", data);\r\n            th.room.guests = data;\r\n            this.dispatchEvent(\"AllGuestInfo\", data);\r\n        });\r\n\r\n        //更新游戏人员信息\r\n        th.ws.addHandler(\"UpdateGamerInfo\", ({ data }) => {\r\n            cc.log(\"<<<===[UpdateGamerInfo] WebSocketManager:\", data);\r\n            let player = th.room.players.find(\r\n                player => player.account_id == data.account_id\r\n            );\r\n            if (player) {\r\n                Object.assign(player, data);\r\n                this.dispatchEvent(\"UpdateGamerInfo\", player);\r\n            } else {\r\n                th.room.players.push(data);\r\n                this.dispatchEvent(\"UpdateGamerInfo\", data);\r\n            }\r\n        });\r\n\r\n        //增加观战 ,更新观战人员信息\r\n        th.ws.addHandler(\"UpdateGuestInfo\", ({ data }) => {\r\n            cc.log(\"<<<===[UpdateGuestInfo] WebSocketManager:\", data);\r\n            let guest = th.getGuestById(data.account_id);\r\n            if (guest) {\r\n                Object.assign(guest, data);\r\n                this.dispatchEvent(\"UpdateGuestInfo\", guest);\r\n            } else {\r\n                th.room.guests.push(data);\r\n                this.dispatchEvent(\"UpdateGuestInfo\", data);\r\n            }\r\n        });\r\n\r\n        //更新玩家状态信息\r\n        th.ws.addHandler(\"UpdateAccountStatus\", ({ data }) => {\r\n            cc.log(\"<<<===[UpdateAccountStatus] WebSocketManager:\", data);\r\n            let player = th.getPlayerById(data.account_id);\r\n            if (player) {\r\n                Object.assign(player, data);\r\n                cc.log(\"UpdateAccountStatus player:\", player);\r\n                this.dispatchEvent(\"UpdateAccountStatus\", player);\r\n            }\r\n        });\r\n\r\n        //开始游戏\r\n        th.ws.addHandler(\"GameStart\", data => {\r\n            cc.log(\"<<<===[GameStart] WebSocketManager:\", data);\r\n            let { game_num, limit_time, data: rdata } = data;\r\n            th.room.game_num = game_num;\r\n            th.room.limit_time = limit_time;\r\n            rdata.forEach(player => {\r\n                let oldPlayer = th.getPlayerById(player.account_id);\r\n                Object.assign(oldPlayer, player);\r\n                this.dispatchEvent(\"UpdateAccountStatus\", oldPlayer);\r\n            });\r\n            this.dispatchEvent(\"GameStart\", data);\r\n        });\r\n        //我的牌\r\n        th.ws.addHandler(\"MyCards\", ({ data }) => {\r\n            cc.log(\"<<<===[MyCards] WebSocketManager:\", data);\r\n            let player = th.getPlayerById(data.account_id);\r\n            player.cards = data.cards;\r\n            this.dispatchEvent(\"MyCards\", player);\r\n        });\r\n        //开始游戏,闲家选倍数\r\n        th.ws.addHandler(\"StartBet\", data => {\r\n            cc.log(\"<<<===[StartBet] WebSocketManager:\", data);\r\n            data.data.forEach(player => {\r\n                let oldPlayer = th.getPlayerById(player.account_id);\r\n                Object.assign(oldPlayer, player);\r\n            });\r\n            this.dispatchEvent(\"StartBet\", data);\r\n        });\r\n\r\n        //闲家选倍数 通知\r\n        th.ws.addHandler(\"UpdateAccountMultiples\", ({ data }) => {\r\n            cc.log(\"<<<===[UpdateAccountMultiples] WebSocketManager:\", data);\r\n            let player = th.getPlayerById(data.account_id);\r\n            player.multiples = data.multiples;\r\n            this.dispatchEvent(\"UpdateAccountMultiples\", player);\r\n        });\r\n\r\n        //显示牌\r\n        th.ws.addHandler(\"StartShow\", data => {\r\n            cc.log(\"<<<===[StartShow] WebSocketManager:\", data);\r\n            data.data.forEach(player => {\r\n                let oldPlayer = th.getPlayerById(player.account_id);\r\n                Object.assign(oldPlayer, player);\r\n            });\r\n            this.dispatchEvent(\"StartShow\", data);\r\n        });\r\n\r\n        //摊牌\r\n        th.ws.addHandler(\"UpdateAccountShow\", ({ data }) => {\r\n            cc.log(\"<<<===[UpdateAccountShow] WebSocketManager:\", data);\r\n            let player = th.getPlayerById(data.account_id);\r\n            Object.assign(player, data);\r\n            this.dispatchEvent(\"UpdateAccountShow\", player);\r\n        });\r\n\r\n        //结果\r\n        th.ws.addHandler(\"Win\", ({ data }) => {\r\n            cc.log(\"<<<===[Win] WebSocketManager:\", data);\r\n            Object.assign(th.room, data);\r\n            this.dispatchEvent(\"Win\", data);\r\n        });\r\n\r\n        /*\r\n        //连接成功初始化信息\r\n        th.ws.addHandler(\"getUserInfo\", data => {\r\n            cc.log(\"<<<===WebSocketManager getUserInfo:\", JSON.stringify(data));\r\n            this.dispatchEvent(\"getUserInfo\", data);\r\n        });\r\n\r\n        //断线\r\n        th.ws.addHandler(\"disconnect\", data => {\r\n            cc.log(\"<<<===WebSocketManager 断开连接\");\r\n        });\r\n        */\r\n    },\r\n\r\n    connectApiServer: function({ ip, port, namespace }) {\r\n        th.ws.close();\r\n        th.ws.ip = ip;\r\n        th.ws.port = port;\r\n        th.ws.addr = `ws://${ip}:${port}/${namespace}`;\r\n        th.ws.connect(\r\n            () => {\r\n                this.dispatchEvent(\"api_connect_success\");\r\n                cc.log(\r\n                    `[连接成功] WebSocketManager :${ip}:${port}/${namespace}`\r\n                );\r\n                th.wc.show(\"正在获取TOKEN...\");\r\n                let params = {\r\n                    operation: \"getToken\",\r\n                    data: { code: th.args.code }\r\n                };\r\n                cc.log(\"===>>>[getToken] WebSocketManager:\", params);\r\n                th.ws.send(JSON.stringify(params));\r\n            },\r\n            () => {\r\n                cc.log(\r\n                    `[连接失败] WebSocketManager :${ip}:${port}/${namespace}`\r\n                );\r\n                th.alert.show(\"提示\", \"连接失败\");\r\n            }\r\n        );\r\n    },\r\n    connectGameNNServer: function({ ip, port, namespace }, callback) {\r\n        th.ws.close();\r\n        th.ws.ip = ip;\r\n        th.ws.port = port;\r\n        th.ws.addr = `ws://${ip}:${port}/${namespace}`;\r\n        th.gametype = \"nn\";\r\n        th.ws.connect(\r\n            () => {\r\n                this.dispatchEvent(\"game_connect_success\");\r\n                callback();\r\n                cc.log(\r\n                    `===WebSocketManager 连接成功:${ip}:${port}/${namespace}===`\r\n                );\r\n            },\r\n            () => {\r\n                cc.log(\r\n                    `===WebSocketManager 连接失败:${ip}:${port}/${namespace}===`\r\n                );\r\n                th.alert.show(\"提示\", \"连接失败\");\r\n            }\r\n        );\r\n    }\r\n});\r\n"]}