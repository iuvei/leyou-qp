{"version":3,"sources":["..\\..\\..\\..\\assets\\scripts/assets\\scripts\\WebSocketManager.js"],"names":["cc","Class","extends","Component","properties","dataEventHandler","dispatchEvent","event","data","emit","initHandlers","log","th","ws","addHandler","result","result_message","rdata","wc","hide","alert","show","args","debug","token","t","params","operation","timestamp","Date","parse","send","JSON","stringify","sign","myself","id","account_id","name","nickname","director","loadScene","room","room_id","number","room_number","session","Object","assign","connectApiServer","ip","port","namespace","close","addr","connect","code","connectGameNNServer"],"mappings":"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","file":"WebSocketManager.js","sourceRoot":"..\\..\\..\\..\\assets\\scripts","sourcesContent":["cc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        dataEventHandler: null //websocket发过来的数据的节点\r\n    },\r\n\r\n    dispatchEvent(event, data) {\r\n        if (this.dataEventHandler) {\r\n            this.dataEventHandler.emit(event, data);\r\n        }\r\n    },\r\n    initHandlers: function() {\r\n        cc.log(\"==>WebSocketManager initHandlers\");\r\n        //获取TOKEN\r\n        th.ws.addHandler(\"getToken\", data => {\r\n            cc.log(\"<<<===WebSocketManager getToken:\", data);\r\n            this.dispatchEvent(\"getToken\", data);\r\n            let { result, result_message, data: rdata } = data;\r\n            if (result != 0) {\r\n                th.wc.hide();\r\n                th.alert.show(\r\n                    \"提示\",\r\n                    th.args.debug ? result_message : \"系统维护更新\"\r\n                );\r\n                return;\r\n            }\r\n            th.wc.show(\"正在获生成签名...\");\r\n            th.token = rdata.t;\r\n            let params = {\r\n                operation: \"makeSign\",\r\n                data: {\r\n                    timestamp: Date.parse(new Date()) / 1000,\r\n                    token: rdata.t\r\n                }\r\n            };\r\n            cc.log(\"===>>>WebSocketManager makeSign:\", params);\r\n            th.ws.send(JSON.stringify(params));\r\n        });\r\n\r\n        //模拟生成签名(获取用户信息)\r\n        th.ws.addHandler(\"makeSign\", data => {\r\n            cc.log(\"<<<===WebSocketManager makeSign:\", data);\r\n            this.dispatchEvent(\"makeSign\", data);\r\n            let { result, result_message, data: rdata } = data;\r\n            if (result != 0) {\r\n                th.wc.hide();\r\n                th.alert.show(\r\n                    \"提示\",\r\n                    th.args.debug ? result_message : \"系统维护更新\"\r\n                );\r\n                return;\r\n            }\r\n            th.wc.show(\"正在用户信息...\");\r\n            th.sign = rdata.sign;\r\n            let params = {\r\n                operation: \"pullUserInfo\",\r\n                data: {\r\n                    timestamp: Date.parse(new Date()) / 1000,\r\n                    token: th.token,\r\n                    sign: rdata.sign\r\n                }\r\n            };\r\n            cc.log(\"===>>>WebSocketManager pullUserInfo:\", params);\r\n            th.ws.send(JSON.stringify(params));\r\n        });\r\n\r\n        //4. 获取用户信息\r\n        th.ws.addHandler(\"pullUserInfo\", data => {\r\n            cc.log(\"<<<===WebSocketManager pullUserInfo:\", data);\r\n            this.dispatchEvent(\"pullUserInfo\", data);\r\n            let { result, result_message, data: rdata } = data;\r\n            if (result != 0) {\r\n                th.wc.hide();\r\n                th.alert.show(\"提示\", result_message);\r\n                return;\r\n            }\r\n            th.wc.show(\"正在加载游戏...\");\r\n            th.myself.id = rdata.account_id;\r\n            th.myself.name = rdata.nickname;\r\n            cc.director.loadScene(\"Hall\", () => {\r\n                th.wc.hide();\r\n            });\r\n        });\r\n\r\n        //创建房间\r\n        th.ws.addHandler(\"CreateRoom\", data => {\r\n            cc.log(\"<<<===WebSocketManager CreateRoom:\", data);\r\n            let { result, result_message, data: rdata } = data;\r\n            if (result != 0) {\r\n                th.wc.hide();\r\n                th.alert.show(\r\n                    \"提示\",\r\n                    th.args.debug ? result_message : \"系统维护更新\"\r\n                );\r\n                return;\r\n            }\r\n            th.wc.show(\"正在加请求房间数据...\");\r\n            th.room.id = rdata.room_id;\r\n            th.room.number = rdata.room_number;\r\n            this.dispatchEvent(\"CreateRoom\", data);\r\n            let params = {\r\n                operation: \"PrepareJoinRoom\",\r\n                account_id: th.myself.id, //用户id};\r\n                session: th.sign,\r\n                data: {\r\n                    room_number: th.room.number\r\n                }\r\n            };\r\n            cc.log(\"===>>>WebSocketManager PrepareJoinRoom:\", params);\r\n            th.ws.send(JSON.stringify(params));\r\n        });\r\n\r\n        //进入房间请求初始信息\r\n        th.ws.addHandler(\"PrepareJoinRoom\", data => {\r\n            cc.log(\"<<<===WebSocketManager PrepareJoinRoom:\", data);\r\n            let { result, result_message, data: rdata } = data;\r\n            if (result != 0) {\r\n                th.wc.hide();\r\n                th.alert.show(\r\n                    \"提示\",\r\n                    th.args.debug ? result_message : \"系统维护更新\"\r\n                );\r\n                return;\r\n            }\r\n            th.wc.hide();\r\n            th.room = Object.assign(th.room, rdata);\r\n            this.dispatchEvent(\"PrepareJoinRoom\", rdata);\r\n        });\r\n\r\n        //连接成功初始化信息\r\n        th.ws.addHandler(\"getUserInfo\", data => {\r\n            cc.log(\"<<<===WebSocketManager getUserInfo:\", JSON.stringify(data));\r\n            this.dispatchEvent(\"getUserInfo\", data);\r\n        });\r\n\r\n        //断线\r\n        th.ws.addHandler(\"disconnect\", data => {\r\n            cc.log(\"<<<===WebSocketManager 断开连接\");\r\n        });\r\n    },\r\n\r\n    connectApiServer: function({ ip, port, namespace }) {\r\n        th.ws.close();\r\n        th.ws.ip = ip;\r\n        th.ws.port = port;\r\n        th.ws.addr = `ws://${ip}:${port}/${namespace}`;\r\n        th.ws.connect(\r\n            () => {\r\n                this.dispatchEvent(\"api_connect_success\");\r\n                cc.log(\r\n                    `===WebSocketManager 连接成功:${ip}:${port}/${namespace}===`\r\n                );\r\n                let params = {\r\n                    operation: \"getToken\",\r\n                    data: { code: th.args.code }\r\n                };\r\n                cc.log(\"===>>>WebSocketManager getToken:\", params);\r\n                th.ws.send(JSON.stringify(params));\r\n                th.wc.show(\"正在获取TOKEN...\");\r\n            },\r\n            () => {\r\n                cc.log(\r\n                    `===WebSocketManager 连接失败:${ip}:${port}/${namespace}===`\r\n                );\r\n                th.alert.show(\"提示\", \"连接失败\");\r\n            }\r\n        );\r\n    },\r\n    connectGameNNServer: function({ ip, port, namespace }) {\r\n        th.ws.close();\r\n        th.ws.ip = ip;\r\n        th.ws.port = port;\r\n        th.ws.addr = `ws://${ip}:${port}/${namespace}`;\r\n        th.ws.connect(\r\n            () => {\r\n                this.dispatchEvent(\"game_connect_success\");\r\n                cc.log(\r\n                    `===WebSocketManager 连接成功:${ip}:${port}/${namespace}===`\r\n                );\r\n                //cc.log(\"===>>>WebSocketManager getToken:\", params);\r\n            },\r\n            () => {\r\n                cc.log(\r\n                    `===WebSocketManager 连接失败:${ip}:${port}/${namespace}===`\r\n                );\r\n                th.alert.show(\"提示\", \"连接失败\");\r\n            }\r\n        );\r\n    }\r\n});\r\n"]}